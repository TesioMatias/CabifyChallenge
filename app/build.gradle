plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.matiastesio.cabify'
    compileSdk 33

    defaultConfig {
        applicationId "com.matiastesio.cabify"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://private-6566b-matiastesio.apiary-mock.com/\""
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://private-6566b-matiastesio.apiary-mock.com/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding = true
    }
}

dependencies {

    // Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.core:core-ktx:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    // Activity
    implementation "androidx.activity:activity-ktx:$activityVersion"

    // ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Corrutinas
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Dagger hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Swipe to refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeToRefreshVersion"

    // Room
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Utils
    implementation "me.relex:circleindicator:$circleIndicator"
    implementation "org.imaginativeworld.whynotimagecarousel:whynotimagecarousel:$imageCarousel"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Test
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.ext:junit:$jUnitExtVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}